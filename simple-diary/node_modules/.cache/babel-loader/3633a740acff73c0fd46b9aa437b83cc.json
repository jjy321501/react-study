{"ast":null,"code":"var _jsxFileName = \"/Users/jjyoung/react-inflearn/simple-diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data;\n      }\n\n    case \"CREATE\":\n      {\n        const created_date = new Date().getTime();\n        const newItem = { ...action.data,\n          created_date\n        };\n        return [newItem, ...state];\n      }\n\n    case \"REMOVE\":\n      {\n        return state.filter(it => it.id !== action.targetId);\n      }\n\n    case \"EDIT\":\n      {\n        return state.map(it => it.id === action.targetId ? { ...it,\n          content: action.newContent\n        } : it);\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst DiaryStateContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  // const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        // 0~4 사이의 정수 +1\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: \"INIT\",\n      data: initData\n    }); // setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current\n      }\n    }); // const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   content,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n\n    dataId.current += 1; // setData((data) => [newItem, ...data]);\n  }, []);\n  const onRemove = useCallback(targetId => {\n    dispatch({\n      type: \"REMOVE\",\n      targetId\n    }); // setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({\n      type: \"EDIT\",\n      targetId,\n      newContent\n    }); // setData((data) =>\n    //   data.map((it) =>\n    //     it.id === targetId ? { ...it, content: newContent } : it\n    //   )\n    // );\n  }, []);\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    value: data,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n        onCreate: onCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uC88B\\uC74C : \", goodCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uB098\\uC068 : \", badCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAE30\\uBD84 \\uC88B\\uC74C \\uBE44\\uC728 : \", goodRatio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n        onEdit: onEdit,\n        onRemove: onRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F0Fyqg4AmrFvw2PizzKMxEoq+hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useMemo","useRef","DiaryEditor","DiaryList","reducer","state","action","type","data","created_date","Date","getTime","newItem","filter","it","id","targetId","map","content","newContent","DiaryStateContext","createContext","App","dispatch","dataId","getData","res","fetch","then","json","initData","slice","author","email","body","emotion","Math","floor","random","current","onCreate","onRemove","onEdit","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"sources":["/Users/jjyoung/react-inflearn/simple-diary/src/App.js"],"sourcesContent":["import React, {\n  useReducer,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      const created_date = new Date().getTime();\n      const newItem = {\n        ...action.data,\n        created_date,\n      };\n      return [newItem, ...state];\n    }\n    case \"REMOVE\": {\n      return state.filter((it) => it.id !== action.targetId);\n    }\n    case \"EDIT\": {\n      return state.map((it) =>\n        it.id === action.targetId ? { ...it, content: action.newContent } : it\n      );\n    }\n    default:\n      return state;\n  }\n};\n\nconst DiaryStateContext = React.createContext();\n\nfunction App() {\n  // const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1, // 0~4 사이의 정수 +1\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    dispatch({ type: \"INIT\", data: initData });\n    // setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: { author, content, emotion, id: dataId.current },\n    });\n    // const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   content,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n    dataId.current += 1;\n    // setData((data) => [newItem, ...data]);\n  }, []);\n  const onRemove = useCallback((targetId) => {\n    dispatch({ type: \"REMOVE\", targetId });\n\n    // setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({ type: \"EDIT\", targetId, newContent });\n\n    // setData((data) =>\n    //   data.map((it) =>\n    //     it.id === targetId ? { ...it, content: newContent } : it\n    //   )\n    // );\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <div className=\"App\">\n        <DiaryEditor onCreate={onCreate} />\n        <div>전체 일기 : {data.length}</div>\n        <div>기분 좋음 : {goodCount}</div>\n        <div>기분 나쁨 : {badCount}</div>\n        <div>기분 좋음 비율 : {goodRatio}</div>\n        <DiaryList onEdit={onEdit} onRemove={onRemove} />\n      </div>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}