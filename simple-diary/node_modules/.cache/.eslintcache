[{"/Users/jjyoung/react-inflearn/simple-diary/src/index.js":"1","/Users/jjyoung/react-inflearn/simple-diary/src/App.js":"2","/Users/jjyoung/react-inflearn/simple-diary/src/DiaryEditor.js":"3","/Users/jjyoung/react-inflearn/simple-diary/src/DiaryList.js":"4","/Users/jjyoung/react-inflearn/simple-diary/src/DiaryItem.js":"5","/Users/jjyoung/react-inflearn/simple-diary/src/OptimizeTest.js":"6"},{"size":418,"mtime":1659467792884,"results":"7","hashOfConfig":"8"},{"size":3427,"mtime":1659722365723,"results":"9","hashOfConfig":"8"},{"size":1873,"mtime":1659722506335,"results":"10","hashOfConfig":"8"},{"size":545,"mtime":1659722547806,"results":"11","hashOfConfig":"8"},{"size":1916,"mtime":1659722602784,"results":"12","hashOfConfig":"8"},{"size":1029,"mtime":1659632290084,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f1pebg",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jjyoung/react-inflearn/simple-diary/src/index.js",[],[],"/Users/jjyoung/react-inflearn/simple-diary/src/App.js",["34","35"],[],"/Users/jjyoung/react-inflearn/simple-diary/src/DiaryEditor.js",["36"],[],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { DiaryDispatchContext } from \"./App\";\n\nconst DiaryEditor = () => {\n  const { onCreate } = useContext(DiaryDispatchContext);\n\n  const authorInput = useRef();\n  const contentInput = useRef();\n\n  const [state, setState] = useState({\n    author: \"\",\n    content: \"\",\n    emotion: 1,\n  });\n\n  const handleChangeState = (e) => {\n    console.log(e.target.name);\n    console.log(e.target.value);\n\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = () => {\n    if (state.author.length < 1) {\n      authorInput.current.focus();\n      return;\n    }\n\n    if (state.content < 5) {\n      contentInput.current.focus();\n      return;\n    }\n\n    onCreate(state.author, state.content, state.emotion);\n    alert(\"저장 성공\");\n    setState({\n      author: \"\",\n      content: \"\",\n      emotion: 1,\n    });\n  };\n\n  return (\n    <div className=\"DiaryEditor\">\n      <h2>오늘의 일기</h2>\n      <div>\n        <input\n          ref={authorInput}\n          name=\"author\"\n          value={state.author}\n          onChange={handleChangeState}\n        />\n      </div>\n      <div>\n        <textarea\n          ref={contentInput}\n          name=\"content\"\n          value={state.content}\n          onChange={handleChangeState}\n        />\n      </div>\n      <div>\n        <select\n          name=\"emotion\"\n          value={state.emotion}\n          onChange={handleChangeState}\n        >\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n        </select>\n      </div>\n      <div>\n        <button onClick={handleSubmit}>일기 저장하기</button>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiaryEditor);\n",[],"/Users/jjyoung/react-inflearn/simple-diary/src/DiaryList.js",["37"],[],"/Users/jjyoung/react-inflearn/simple-diary/src/DiaryItem.js",["38"],[],"/Users/jjyoung/react-inflearn/simple-diary/src/OptimizeTest.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":102,"column":6,"nodeType":"41","endLine":102,"endColumn":8,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":109,"column":6,"nodeType":"41","endLine":109,"endColumn":19,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":29,"nodeType":"47","messageId":"48","endLine":1,"endColumn":38},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":11},{"ruleId":"45","severity":1,"message":"46","line":1,"column":47,"nodeType":"47","messageId":"48","endLine":1,"endColumn":56},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'onCreate', 'onEdit', and 'onRemove'. Either include them or remove the dependency array.","ArrayExpression",["50"],"React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.",["51"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [onCreate, onEdit, onRemove]",{"range":"56","text":"57"},"Update the dependencies array to be: [data]",{"range":"58","text":"59"},[2547,2549],"[onCreate, onEdit, onRemove]",[2816,2829],"[data]"]